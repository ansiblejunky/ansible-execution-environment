---
version: 3

# This is a template execution environment configuration.
# Copy this file and ee-variables.yml to start customizing your environment.
# See examples/ directory for different configuration examples.

build_arg_defaults:
  ANSIBLE_GALAXY_CLI_COLLECTION_OPTS: "{{ dependencies.galaxy.options }}"

dependencies:
  galaxy: "{{ dependencies.galaxy.file }}"
  python: "{{ dependencies.python.file }}"
  system: "{{ dependencies.system.file }}"

images:
  base_image:
    name: "{{ base_image.name }}"

options:
  package_manager_path: "{{ package_manager.path }}"

additional_build_files:
  # Only include files that are marked as required or enabled
  {% for file in build_files %}
  {% if file.required or file.enabled | default(false) %}
  - src: "{{ file.src }}"
    dest: "{{ file.dest }}"
  {% endif %}
  {% endfor %}

additional_build_steps:
  prepend_base:
    {% if build_steps.prepend_base.system_info %}
    - RUN whoami
    - RUN cat /etc/os-release
    {% endif %}
    {% if build_steps.prepend_base.environment_check %}
    - RUN echo PKGMGR = $PKGMGR, PYCMD = $PYCMD
    {% endif %}

    {% if dependencies.python.upgrade_pip %}
    - RUN $PYCMD -m pip install --upgrade pip
    {% endif %}

    # Configure package manager options
    - ENV PKGMGR_OPTS "{{ package_manager.options }}"

    {% for repo_name, enabled in package_manager.repositories.items() %}
    {% if enabled %}
    {% if repo_name == 'hashicorp' %}
    # Install HashiCorp repository
    - RUN curl https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo --output /etc/yum.repos.d/hashicorp.repo
    {% endif %}
    {% endif %}
    {% endfor %}

    {% if tools.azure_cli.enabled %}
    # Install Azure CLI
    - >
      RUN $PKGMGR install -y dnf &&
      rpm --import https://packages.microsoft.com/keys/microsoft.asc &&
      dnf -y install -y https://packages.microsoft.com/config/rhel/9.0/packages-microsoft-prod.rpm &&
      $PKGMGR -y install azure-cli
    {% endif %}

    {% if tools.packer.enabled %}
    # Install HashiCorp Packer
    - RUN $PKGMGR -y install packer{% if tools.packer.version != 'latest' %}={{ tools.packer.version }}{% endif %}
    {% endif %}

    {% if tools.openscap.enabled %}
    # Install OpenSCAP scanner
    - RUN $PKGMGR -y install openscap-scanner
    {% endif %}

  prepend_galaxy:
    {% if build_steps.prepend_galaxy.copy_ansible_config %}
    - COPY _build/configs/ansible.cfg /etc/ansible/ansible.cfg
    {% endif %}
    {% if build_steps.prepend_galaxy.copy_kerberos_config %}
    - COPY _build/configs/krb5.conf /etc/krb5.conf
    {% endif %}

  append_final:
    {% if build_steps.append_final.verify_dependencies %}
    - RUN pip3 check
    {% endif %}
    {% if build_steps.append_final.cleanup_cache %}
    - >
      RUN $PKGMGR update -y &&
      $PKGMGR clean all &&
      rm -rf /var/cache/{dnf,yum} &&
      rm -rf /var/lib/dnf/history.* &&
      rm -rf /var/log/*
    {% endif %}
